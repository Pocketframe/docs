"use strict";(self.webpackChunkpocketframe_docs=self.webpackChunkpocketframe_docs||[]).push([[9538],{5777:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"getting-deeper/helper-functions","title":"Helper Functions","description":"Pocketframe provides a set of helper functions that can be used throughout your application. These functions are designed to make common tasks easier and more efficient. Below is a list of some of the most commonly used helper functions.","source":"@site/docs/getting-deeper/helper-functions.md","sourceDirName":"getting-deeper","slug":"/getting-deeper/helper-functions","permalink":"/docs/docs/getting-deeper/helper-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/pocketframe/docs/tree/main/docs/getting-deeper/helper-functions.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"Pocket CLI","permalink":"/docs/docs/getting-deeper/pocket-cli"},"next":{"title":"PockettView Templates","permalink":"/docs/docs/pocketviews/pocketview-templates"}}');var a=s(4848),r=s(8453);const o={sidebar_position:20},i="Helper Functions",l={},d=[{value:"Helper Functions",id:"helper-functions-1",level:2},{value:"<code>dd($value)</code>",id:"ddvalue",level:3},{value:"<code>base_path($path = &#39;&#39;)</code>",id:"base_pathpath--",level:3},{value:"<code>urlIs($url)</code>",id:"urlisurl",level:3},{value:"<code>error($message)</code>",id:"errormessage",level:3},{value:"<code>display_errors($errors)</code>",id:"display_errorserrors",level:3},{value:"<code>error_message($message)</code>",id:"error_messagemessage",level:3},{value:"<code>abort($code, $message = &#39;&#39;)</code>",id:"abortcode-message--",level:3},{value:"<code>redirect($url)</code>",id:"redirecturl",level:3},{value:"<code>old($key, $default = null)</code>",id:"oldkey-default--null",level:3},{value:"<code>env($key, $default = null)</code>",id:"envkey-default--null",level:3},{value:"<code>numberToWords($number)</code>",id:"numbertowordsnumber",level:3},{value:"<code>asset($path)</code>",id:"assetpath",level:3},{value:"<code>store_path($path)</code>",id:"store_pathpath",level:3},{value:"<code>database_path($path)</code>",id:"database_pathpath",level:3},{value:"<code>sanitize($value)</code>",id:"sanitizevalue",level:3},{value:"<code>config_path($path)</code>",id:"config_pathpath",level:3},{value:"<code>config($key, $default = null)</code>",id:"configkey-default--null",level:3},{value:"<code>routes_path($path)</code>",id:"routes_pathpath",level:3},{value:"<code>storage_path($path)</code>",id:"storage_pathpath",level:3},{value:"<code>route($name, $params = [])</code>",id:"routename-params--",level:3},{value:"<code>flash($key, $value)</code>",id:"flashkey-value",level:3},{value:"<code>get_flash($key)</code>",id:"get_flashkey",level:3},{value:"<code>has_flash($key)</code>",id:"has_flashkey",level:3},{value:"<code>flash_old_input($key, $value)</code>",id:"flash_old_inputkey-value",level:3},{value:"<code>get_old_input($key)</code>",id:"get_old_inputkey",level:3},{value:"<code>session($key, $value = null)</code>",id:"sessionkey-value--null",level:3},{value:"<code>fromEntity($entity)</code>",id:"fromentityentity",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"helper-functions",children:"Helper Functions"})}),"\n",(0,a.jsx)(n.p,{children:"Pocketframe provides a set of helper functions that can be used throughout your application. These functions are designed to make common tasks easier and more efficient. Below is a list of some of the most commonly used helper functions."}),"\n",(0,a.jsx)(n.h2,{id:"helper-functions-1",children:"Helper Functions"}),"\n",(0,a.jsx)(n.h3,{id:"ddvalue",children:(0,a.jsx)(n.code,{children:"dd($value)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"dd"}),' function is a shorthand for "dump and die". It is used to dump the contents of a variable and stop the execution of the script. This is useful for debugging purposes.']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"dd('Hello World!');\n\nOutput:\n\n// Hello World!\n"})}),"\n",(0,a.jsx)(n.h3,{id:"base_pathpath--",children:(0,a.jsx)(n.code,{children:"base_path($path = '')"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"base_path"})," function returns the absolute path to the base directory of your application. You can pass an optional ",(0,a.jsx)(n.code,{children:"$path"})," argument to append to the base path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"$basePath = base_path('app/Controllers');\n\necho $basePath;\n\nOutput:\n\n// /path/to/your/application/app/Controllers\n"})}),"\n",(0,a.jsx)(n.h3,{id:"urlisurl",children:(0,a.jsx)(n.code,{children:"urlIs($url)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"urlIs"})," function checks if the current URL matches the given URL. It returns ",(0,a.jsx)(n.code,{children:"true"})," if it matches, and ",(0,a.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"if (urlIs('/home')) {\n    echo 'You are on the home page.';\n} else {\n    echo 'You are not on the home page.';\n}\n\nOutput:\n\n// You are on the home page.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"errormessage",children:(0,a.jsx)(n.code,{children:"error($message)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"error"})," function is used to display an error message. It can be used to show validation errors or any other type of error message."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"error('This is an error message.');\n\nOutput:\n\n// This is an error message.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"display_errorserrors",children:(0,a.jsx)(n.code,{children:"display_errors($errors)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"display_errors"})," function is used to display a list of error messages. It takes an array of error messages as an argument and displays them."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers];",children:"display_errors('Name is required.'');\n\nOutput:\n\n// - Name is required.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"error_messagemessage",children:(0,a.jsx)(n.code,{children:"error_message($message)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"error_message"})," function is used to display a single error message. It takes a message as an argument and displays it."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"error_message('This is a single error message.');\n\nOutput:\n\n// This is a single error message.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"abortcode-message--",children:(0,a.jsx)(n.code,{children:"abort($code, $message = '')"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"abort"})," function is used to abort the current request and return an HTTP response with the given status code. You can also pass an optional message to display."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"abort(404, 'Page not found.');\n\nOutput:\n\n// Page not found.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"redirecturl",children:(0,a.jsx)(n.code,{children:"redirect($url)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"redirect"})," function is used to redirect the user to a different page. It takes a URL as an argument and redirects the user to that URL."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"redirect('/home');\n\nOutput:\n\n// Redirects to /home\n"})}),"\n",(0,a.jsx)(n.h3,{id:"oldkey-default--null",children:(0,a.jsx)(n.code,{children:"old($key, $default = null)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"old"})," function is used to retrieve the old input value for a given key. This is useful for repopulating form fields after a validation error."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"old('name');\n\nOutput:\n\n// John Doe\n"})}),"\n",(0,a.jsx)(n.h3,{id:"envkey-default--null",children:(0,a.jsx)(n.code,{children:"env($key, $default = null)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"env"})," function is used to retrieve the value of an environment variable. You can pass a default value as the second argument, which will be returned if the environment variable is not set."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"env('APP_NAME');\n\nOutput:\n\n// Pocketframe\n"})}),"\n",(0,a.jsx)(n.h3,{id:"numbertowordsnumber",children:(0,a.jsx)(n.code,{children:"numberToWords($number)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"numberToWords"})," function converts a number to its corresponding word representation. This is useful for displaying numbers in a more human-readable format."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"$number = 123;\nnumberToWords($number);\n\nOutput:\n\n// One Hundred Twenty-Three\n"})}),"\n",(0,a.jsx)(n.h3,{id:"assetpath",children:(0,a.jsx)(n.code,{children:"asset($path)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"asset"})," function generates a URL for an asset using the base URL of your application. You can pass the path to the asset as an argument."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"asset('images/logo.png');\n\nOutput:\n\n// http://localhost:8000/images/logo.png\n"})}),"\n",(0,a.jsx)(n.h3,{id:"store_pathpath",children:(0,a.jsx)(n.code,{children:"store_path($path)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"store_path"})," function returns the absolute path to the storage directory of your application. You can pass an optional ",(0,a.jsx)(n.code,{children:"$path"})," argument to append to the storage path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"store_path('uploads');\n\nOutput:\n\n// /path/to/your/application/storage/uploads\n"})}),"\n",(0,a.jsx)(n.h3,{id:"database_pathpath",children:(0,a.jsx)(n.code,{children:"database_path($path)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"database_path"})," function returns the absolute path to the database directory of your application. You can pass an optional ",(0,a.jsx)(n.code,{children:"$path"})," argument to append to the database path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"database_path('schemas');\n\nOutput:\n\n// /path/to/your/application/database/schemas\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sanitizevalue",children:(0,a.jsx)(n.code,{children:"sanitize($value)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"sanitize"})," function is used to sanitize a string by removing any unwanted characters. This is useful for preventing XSS attacks and ensuring that user input is safe to display."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:'sanitize(\'<script>alert("XSS Attack!");<\/script>\');\n\nOutput:\n\n// alert("XSS Attack!");\n'})}),"\n",(0,a.jsx)(n.h3,{id:"config_pathpath",children:(0,a.jsx)(n.code,{children:"config_path($path)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"config_path"})," function returns the absolute path to the configuration directory of your application. You can pass an optional\n",(0,a.jsx)(n.code,{children:"$path"})," argument to append to the configuration path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"config_path('app');\n\nOutput:\n\n// /path/to/your/application/config/app.php\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configkey-default--null",children:(0,a.jsx)(n.code,{children:"config($key, $default = null)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"config"})," function is used to retrieve a configuration value from the configuration file. You can pass the key of the configuration value as the first argument and an optional default value as the second argument."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"config('app.name');\n\nOutput:\n\n// Pocketframe\n"})}),"\n",(0,a.jsx)(n.h3,{id:"routes_pathpath",children:(0,a.jsx)(n.code,{children:"routes_path($path)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"routes_path"})," function returns the absolute path to the routes directory of your application. You can pass an optional ",(0,a.jsx)(n.code,{children:"$path"})," argument to append to the routes path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"routes_path('web.php');\n\nOutput:\n\n// /path/to/your/application/routes/web.php\n"})}),"\n",(0,a.jsx)(n.h3,{id:"storage_pathpath",children:(0,a.jsx)(n.code,{children:"storage_path($path)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"storage_path"})," function returns the absolute path to the storage directory of your application. You can pass an optional ",(0,a.jsx)(n.code,{children:"$path"})," argument to append to the storage path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"storage_path('logs/app.log');\n\nOutput:\n\n// /path/to/your/application/storage/logs/app.log\n"})}),"\n",(0,a.jsx)(n.h3,{id:"routename-params--",children:(0,a.jsx)(n.code,{children:"route($name, $params = [])"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"route"})," function generates a URL for a named route. You can pass the name of the route as the first argument and an optional array of parameters as the second argument."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"route('home');\nroute('user.profile', ['id' => 1]);\n\nOutput:\n\n// http://localhost:8000/home\n// http://localhost:8000/user/1\n"})}),"\n",(0,a.jsx)(n.h3,{id:"flashkey-value",children:(0,a.jsx)(n.code,{children:"flash($key, $value)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"flash"})," function is used to store a value in the session for the next request. This is useful for displaying flash messages or temporary data."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"flash('success', 'Your profile has been updated successfully.');\n"})}),"\n",(0,a.jsx)(n.h3,{id:"get_flashkey",children:(0,a.jsx)(n.code,{children:"get_flash($key)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"get_flash"})," function retrieves a value from the session that was stored using the ",(0,a.jsx)(n.code,{children:"flash"})," function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"get_flash('success');\n\nOutput:\n\n// Your profile has been updated successfully.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"has_flashkey",children:(0,a.jsx)(n.code,{children:"has_flash($key)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"has_flash"})," function checks if a value exists in the session that was stored using the ",(0,a.jsx)(n.code,{children:"flash"})," function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"has_flash('success');\n\nOutput:\n// true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"flash_old_inputkey-value",children:(0,a.jsx)(n.code,{children:"flash_old_input($key, $value)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"flash_old_input"})," function is used to store an old input value in the session for the next request. This is useful for repopulating form fields after a validation error."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"flash_old_input('name', 'John Doe');\n"})}),"\n",(0,a.jsx)(n.h3,{id:"get_old_inputkey",children:(0,a.jsx)(n.code,{children:"get_old_input($key)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"get_old_input"})," function retrieves an old input value from the session that was stored using the ",(0,a.jsx)(n.code,{children:"flash_old_input"})," function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"get_old_input('name');\n\nOutput:\n\n// John Doe\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sessionkey-value--null",children:(0,a.jsx)(n.code,{children:"session($key, $value = null)"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"session"})," function is used to retrieve or set a value in the session. You can pass the key of the session value as the first argument and an optional value as the second argument. If you pass a value, it will set the session value; if you don't pass a value, it will retrieve the session value."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"session('name', 'John Doe');\nsession('name');\nsession('age', 30);\nsession('age');\n\nOutput:\n\n// John Doe\n// 30\n"})}),"\n",(0,a.jsx)(n.h3,{id:"fromentityentity",children:(0,a.jsx)(n.code,{children:"fromEntity($entity)"})}),"\n",(0,a.jsx)(n.p,{children:"Get the Query Engine for the given entity. This is useful for performing database operations on the entity."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"use App\\Entities\\User;\n\n$users = fromEntity(User::class)->where('age', '>', 18)->get();\n\nforeach ($users as $user) {\n    echo $user->name;\n}\n\nOutput:\n\n// [John Doe, Jane Doe]\n"})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(6540);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);