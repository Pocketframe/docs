"use strict";(self.webpackChunkpocketframe_docs=self.webpackChunkpocketframe_docs||[]).push([[2953],{6319:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"essentials/csrf-protection","title":"CSRF Protection","description":"Introduction","source":"@site/docs/essentials/csrf-protection.md","sourceDirName":"essentials","slug":"/essentials/csrf-protection","permalink":"/docs/docs/essentials/csrf-protection","draft":false,"unlisted":false,"editUrl":"https://github.com/pocketframe/docs/tree/main/docs/essentials/csrf-protection.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Controllers","permalink":"/docs/docs/essentials/controllers"},"next":{"title":"HTTP Request","permalink":"/docs/docs/essentials/requests"}}');var s=n(4848),r=n(8453);const i={sidebar_position:8},c="CSRF Protection",a={},d=[{value:"Introduction",id:"introduction",level:3},{value:"Preventing CSRF Attacks",id:"preventing-csrf-attacks",level:3}];function l(e){const t={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"csrf-protection",children:"CSRF Protection"})}),"\n",(0,s.jsx)(t.h3,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(t.p,{children:"Cross-site request forgeries are a type of malicious exploit whereby unauthorized action is performed on behalf of the user. In other words, a user is tricked into submitting a malicious form without their knowledge. By default, Pocketframe includes a middleware that will protect your application against cross-site request forgeries."}),"\n",(0,s.jsx)(t.h3,{id:"preventing-csrf-attacks",children:"Preventing CSRF Attacks"}),"\n",(0,s.jsxs)(t.p,{children:["To prevent CSRF attacks, you should include a CSRF token in all your forms. You can generate a CSRF token using the ",(0,s.jsx)(t.code,{children:"@csrf"})," helper function."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<form method="POST" action="/profile">\n    @csrf\n\n</form>\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["If you are using a framework like Vue or React, you should not use the ",(0,s.jsx)(t.code,{children:"@csrf"})," helper function. Instead, you should use the ",(0,s.jsx)(t.code,{children:"_token()"})," helper function. This will generate a CSRF token that is unique to the current user."]})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);