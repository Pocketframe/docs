"use strict";(self.webpackChunkpocketframe_docs=self.webpackChunkpocketframe_docs||[]).push([[9975],{8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var s=r(6540);const o={},t=s.createContext(o);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(t.Provider,{value:n},e.children)}},9888:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"essentials/controllers","title":"Controllers","description":"Introduction","source":"@site/docs/essentials/controllers.md","sourceDirName":"essentials","slug":"/essentials/controllers","permalink":"/docs/docs/essentials/controllers","draft":false,"unlisted":false,"editUrl":"https://github.com/pocketframe/docs/tree/main/docs/essentials/controllers.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Middleware","permalink":"/docs/docs/essentials/middleware"},"next":{"title":"CSRF Protection","permalink":"/docs/docs/essentials/csrf-protection"}}');var o=r(4848),t=r(8453);const l={sidebar_position:8},c="Controllers",i={},d=[{value:"Introduction",id:"introduction",level:3},{value:"Single Action Controllers",id:"single-action-controllers",level:3},{value:"Resource Controllers",id:"resource-controllers",level:3},{value:"API Controllers",id:"api-controllers",level:3}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"controllers",children:"Controllers"})}),"\n",(0,o.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Controllers are responsible for handling incoming requests and returning responses. Controllers can group related request handling logic into a single class. They are stored in the app/Controllers directory."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Creating a Controller:"})}),"\n",(0,o.jsx)(n.p,{children:"To help you create a controller, run the following pocket command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"php pocket controller:create HomeController\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["All controllers are stored in the ",(0,o.jsx)(n.code,{children:"app/Controllers"})," directory. Inside the Controllers directory, there are two subdirectories: ",(0,o.jsx)(n.code,{children:"Web"})," and ",(0,o.jsx)(n.code,{children:"Api"}),". The ",(0,o.jsx)(n.code,{children:"Web"})," directory is used for web routes and the ",(0,o.jsx)(n.code,{children:"Api"})," directory is used for API routes."]})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Basic Controller Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"<?php\n\nnamespace App\\Controllers\\Web\\Posts;\n\nuse App\\Entities\\Category;\nuse Pocketframe\\PocketORM\\Database\\QueryEngine;\nuse Pocketframe\\Http\\Response\\Response;\n\nclass PostsController\n{\n  public function index(): Response\n  {\n    $categories = QueryEngine::for(Category::class)\n      ->select(['id', 'category_name'])\n      ->where('status', 'active')\n      ->include('tags')\n      ->get();\n\n    return Response::view('posts.index', compact('categories'));\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Once you have written a controller class and method, you may define a route to the controller method like so:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"$router->get('/posts', [PostsController::class, 'index']);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["When a request is made to the ",(0,o.jsx)(n.code,{children:"/posts"})," route, the ",(0,o.jsx)(n.code,{children:"index()"})," method of the ",(0,o.jsx)(n.code,{children:"PostsController"})," class will be executed."]}),"\n",(0,o.jsx)(n.h3,{id:"single-action-controllers",children:"Single Action Controllers"}),"\n",(0,o.jsxs)(n.p,{children:["Single action controllers are a simple way to define a controller that only has a single action. They are basically have a single method called ",(0,o.jsx)(n.code,{children:"__invoke()"})," that handles the incoming request"]}),"\n",(0,o.jsx)(n.p,{children:"To create a single action controller, you can run the following pocket command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"php pocket controller:create DashboardController --invokable\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"You can also abbreviate the command to"}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"php pocket controller:create DashboardController -i"})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"<?php\n\nnamespace App\\Controllers\\Web\\Dashboard;\n\nuse Pocketframe\\Http\\Request\\Request;\n\nclass DashboardController\n{\n   public function __invoke(Request $request)\n    {\n       //\n    }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Corresponding route"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"$router->get('/dashboard', DashboardController::class);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"resource-controllers",children:"Resource Controllers"}),"\n",(0,o.jsx)(n.p,{children:"Resource controllers are a type of controller that is used to handle CRUD operations. They are a great way to organize your code and make it easier to maintain."}),"\n",(0,o.jsx)(n.p,{children:"If you want to generate a resource controller, you can run the following pocket command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"php pocket controller:create PostsController --resource\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"You can also abbreviate the command to"}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"php pocket controller:create PostsController -r"})})]}),"\n",(0,o.jsx)(n.p,{children:"Available actions in a resource controller:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"HTTP Verb"}),(0,o.jsx)(n.th,{children:"URI"}),(0,o.jsx)(n.th,{children:"Action"}),(0,o.jsx)(n.th,{children:"Route Name"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET"}),(0,o.jsx)(n.td,{children:"/posts"}),(0,o.jsx)(n.td,{children:"index"}),(0,o.jsx)(n.td,{children:"post.index"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET"}),(0,o.jsx)(n.td,{children:"/posts/create"}),(0,o.jsx)(n.td,{children:"create"}),(0,o.jsx)(n.td,{children:"post.create"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"POST"}),(0,o.jsx)(n.td,{children:"/posts"}),(0,o.jsx)(n.td,{children:"store"}),(0,o.jsx)(n.td,{children:"post.store"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET"}),(0,o.jsxs)(n.td,{children:["/posts/","id"]}),(0,o.jsx)(n.td,{children:"show"}),(0,o.jsx)(n.td,{children:"post.show"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET"}),(0,o.jsxs)(n.td,{children:["/posts/","id","/edit"]}),(0,o.jsx)(n.td,{children:"edit"}),(0,o.jsx)(n.td,{children:"post.edit"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"PUT"}),(0,o.jsxs)(n.td,{children:["/posts/","id"]}),(0,o.jsx)(n.td,{children:"update"}),(0,o.jsx)(n.td,{children:"post.update"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"DELETE"}),(0,o.jsxs)(n.td,{children:["/posts/","id"]}),(0,o.jsx)(n.td,{children:"destroy"}),(0,o.jsx)(n.td,{children:"post.destroy"})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"api-controllers",children:"API Controllers"}),"\n",(0,o.jsxs)(n.p,{children:["You can also generate a controller specifically for the API. API controllers only contains ",(0,o.jsx)(n.code,{children:"index"}),", ",(0,o.jsx)(n.code,{children:"store"}),", ",(0,o.jsx)(n.code,{children:"show"}),", ",(0,o.jsx)(n.code,{children:"update"})," and ",(0,o.jsx)(n.code,{children:"destroy"})," To do this, you can run the following pocket command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"php pocket controller:create PostsController --api\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);