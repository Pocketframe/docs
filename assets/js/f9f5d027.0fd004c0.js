"use strict";(self.webpackChunkpocketframe_docs=self.webpackChunkpocketframe_docs||[]).push([[630],{3718:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"core/core-concepts","title":"Core Concepts","description":"Pocketframe is built on a few core concepts that make it a powerful and flexible framework for building web applications. Understanding these concepts will help you leverage the full potential of Pocketframe.","source":"@site/docs/core/core-concepts.md","sourceDirName":"core","slug":"/core/core-concepts","permalink":"/docs/docs/core/core-concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/pocketframe/docs/tree/main/docs/core/core-concepts.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/docs/getting-started/configuration"},"next":{"title":"Bootstrapping","permalink":"/docs/docs/core/bootstrapping"}}');var i=s(4848),r=s(8453);const a={sidebar_position:4},o="Core Concepts",c={},d=[{value:"MVC Architecture",id:"mvc-architecture",level:2},{value:"Application Life Cycle",id:"application-life-cycle",level:2},{value:"Service Container",id:"service-container",level:2},{value:"Dependency Injection",id:"dependency-injection",level:3},{value:"Container Basics",id:"container-basics",level:4},{value:"Binding",id:"binding",level:4},{value:"Singleton Binding",id:"singleton-binding",level:4},{value:"Resolving",id:"resolving",level:4},{value:"Advanced Container Features",id:"advanced-container-features",level:4}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"core-concepts",children:"Core Concepts"})}),"\n",(0,i.jsx)(n.p,{children:"Pocketframe is built on a few core concepts that make it a powerful and flexible framework for building web applications. Understanding these concepts will help you leverage the full potential of Pocketframe."}),"\n",(0,i.jsx)(n.h2,{id:"mvc-architecture",children:"MVC Architecture"}),"\n",(0,i.jsx)(n.p,{children:"Pocketframe follows the Model-View-Controller (MVC) architecture, which separates the application logic into three interconnected components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Model"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Represents the data and business logic of the application. It interacts with the database and performs operations like creating, reading, updating, and deleting records."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"View"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Represents the user interface of the application. It displays data to the user and handles user interactions."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Controller"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Acts as an intermediary between the Model and View. It processes user requests, interacts with the Model to retrieve or update data, and returns the appropriate View to the user."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Route"}),":"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Defines the URL patterns and maps them to specific controllers and actions. It acts as a bridge between the incoming request and the appropriate controller."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Middleware"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Provides a way to filter HTTP requests entering your application. Middleware can perform actions before or after the request is processed, such as authentication, logging, and CORS handling."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Service Container"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"A powerful tool for managing class dependencies and performing dependency injection (DI). It allows you to bind classes to the container and resolve them when needed."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Request"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Represents the HTTP request made by the user. It contains information about the request method, headers, parameters, and body."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Response"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Represents the HTTP response sent back to the user. It contains the status code, headers, and body of the response."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Environment"}),":"]}),"\n",(0,i.jsxs)(n.p,{children:["Provides a way to manage environment variables and configuration settings for different environments (development, testing, production). It allows you to load environment variables from a ",(0,i.jsx)(n.code,{children:".env"})," file and access them throughout the application."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Configuration"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Contains the configuration files for your application. It allows you to define settings for different components of the application, such as database connections, filesystem, and application settings."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Database"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Provides a way to interact with the database. It allows you to perform CRUD operations, run queries, and manage database connections."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Schemas"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Represents the structure of a database table. It defines the columns, data types, and constraints for the table."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Blueprint"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Generates dummy data for testing and development purposes. It generates random data for various data types, such as names, addresses, and phone numbers.\n."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Entity"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Represents a single record in the database. It contains properties that correspond to the columns in the database table and methods for interacting with the data."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"application-life-cycle",children:"Application Life Cycle"}),"\n",(0,i.jsx)(n.p,{children:"The application starts in index.php which:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initializes the session and loads Composer\u2019s autoloader."}),"\n",(0,i.jsx)(n.li,{children:"Requires bootstrap.php to create the container and router instances."}),"\n",(0,i.jsx)(n.li,{children:"Loads routes and environment variables."}),"\n",(0,i.jsx)(n.li,{children:"Registers middleware and container bindings (both framework\u2013level and application-specific)."}),"\n",(0,i.jsx)(n.li,{children:"Configures the database and sets it in the container.\nFinally, the App is initiated and run to handle the HTTP request."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"service-container",children:"Service Container"}),"\n",(0,i.jsx)(n.p,{children:"The service container is a powerful tool for managing class dependencies and performing dependency injection (DI). It is used to bind and resolve classes throughout the application."}),"\n",(0,i.jsx)(n.h3,{id:"dependency-injection",children:"Dependency Injection"}),"\n",(0,i.jsx)(n.p,{children:"Dependency injection is a design pattern that allows a class to receive its dependencies from an external source rather than creating them itself. This promotes loose coupling and makes the code more modular and testable."}),"\n",(0,i.jsx)(n.h4,{id:"container-basics",children:"Container Basics"}),"\n",(0,i.jsx)(n.p,{children:"The container provides methods for binding classes to the container and resolving them when needed."}),"\n",(0,i.jsx)(n.h4,{id:"binding",children:"Binding"}),"\n",(0,i.jsxs)(n.p,{children:["Binding a class to the container is done using the ",(0,i.jsx)(n.code,{children:"bind"})," method. The first parameter is the class name, and the second is a closure that returns an instance of the class."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"$container->bind(Database::class, function () {\n  $config = require config_path('database');\n  return new Database($config['database']);\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"singleton-binding",children:"Singleton Binding"}),"\n",(0,i.jsxs)(n.p,{children:["To create a singleton instance, use the ",(0,i.jsx)(n.code,{children:"singleton"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"$container->singleton(Database::class, function () {\n  $config = require config_path('database');\n  return new Database($config['database']);\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:"This ensures that only one instance of the class is created and shared throughout the application."}),"\n",(0,i.jsx)(n.h4,{id:"resolving",children:"Resolving"}),"\n",(0,i.jsxs)(n.p,{children:["Resolving a class from the container is done using the ",(0,i.jsx)(n.code,{children:"getInstance"})," method. The first parameter is the class name."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:"showLineNumbers",children:"$container->getInstance(Database::class);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"advanced-container-features",children:"Advanced Container Features"}),"\n",(0,i.jsx)(n.p,{children:"The container also provides:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Singleton binding via the ",(0,i.jsx)(n.code,{children:"singleton"})," method."]}),"\n",(0,i.jsxs)(n.li,{children:["Storing pre-created instances via the ",(0,i.jsx)(n.code,{children:"instance"})," method."]}),"\n",(0,i.jsx)(n.li,{children:"Automatic dependency resolution using reflection."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);